using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;

namespace BlastPDF.Template;

[Generator]
public class TemplateGenerator : IIncrementalGenerator
{
    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        var templates = context.AdditionalTextsProvider
            .Where(static file => file.Path.EndsWith(".bxpdf"))
            .Select(static (file, cancellationToken) => 
                (path: file.Path, name: Path.GetFileNameWithoutExtension(file.Path), content: file.GetText(cancellationToken)?.ToString() ?? ""));
        
        context.RegisterSourceOutput(templates, (spc, template) =>
        {
            var lexer = new Lexer(template.content);
            var outputString = lexer.Aggregate("Tokens::\n", (current, token) => current + $"> {token.Type} '{token.Lexeme.Replace("\"", "\"\"")}'\n");

            spc.AddSource($"BlastPDF.Template.{template.name}.g.cs", $@"// <auto-generated>
// This code was auto generated by BlastPDF.Template

using System;

public class {template.name} {{
    public static void OHYEAH() {{
        Console.WriteLine(""Okay I got the source generator working...."");
        Console.WriteLine(@""{outputString}"");
    }}
}}

");
        });
        
    }
}